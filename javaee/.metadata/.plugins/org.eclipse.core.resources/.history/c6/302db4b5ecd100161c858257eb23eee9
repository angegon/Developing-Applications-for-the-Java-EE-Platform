package modelo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javabeans.Cliente;
import javabeans.Libro;
import javabeans.Tema;

public class GestionLibros {
	private String url = "jdbc:mysql://localhost:3306/libros";
	private String user = "root";
	private String pwd = "root";
	private String driver = "com.mysql.jdbc.Driver";
	
	public GestionLibros() {
		try {
			Class.forName(driver);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public Boolean LoginLibreria(String usuario, String password) {
		
		boolean res = false;
		
 		try (Connection cn = DriverManager.getConnection(url, user, pwd)) {
			String sql = "select * from contactos where usuario=? and password=?";
			PreparedStatement ps = cn.prepareStatement(sql);
			ps.setString(1, usuario);
			ps.setString(2, password);
			ResultSet rs = ps.executeQuery();
			// next devuelve true si hay al menos uno.
			while (rs.next()){
				res=true;
			}
			
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		return res;
	}
	
	public boolean RegistroUsuario(Cliente c){
		boolean res = false;
		try (Connection cn = DriverManager.getConnection(url, user, pwd)) {
			String sql = "Insert into clientes (nombre,password,email,telefono) ";
			sql += "values(?,?,?,?)";
			// creamos consulta preparada:
			PreparedStatement ps = cn.prepareStatement(sql);

			// Sustituimos parametros por valores
			ps.setString(1, c.getNombre());
			ps.setString(2, c.getPassword());
			ps.setString(3, c.getEmail());
			ps.setInt(4, c.getTelefono());
			// ejecutamos
			ps.execute();
			res = true;
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		return res;				
	}
	
	public ArrayList<Tema> CargarTemas(){
		ArrayList<Tema> temas = new ArrayList<>();
		Tema t;
		
 		try (Connection cn = DriverManager.getConnection(url, user, pwd)) {
			String sql = "select * from temas";
			PreparedStatement ps = cn.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			// next devuelve true si hay al menos uno.
			while (rs.next()){
				t = new Tema();
				t.setIdTema(rs.getInt("idTema"));
				t.setTema("tema");
				temas.add(t);
			}
			
		} catch (SQLException ex) {
			ex.printStackTrace();
		}

		return temas;
	}
	
	public ArrayList<Libro> CargarLibros(Integer idTema){
		ArrayList<Libro> libros = new ArrayList<>();
		Libro l;
 		try (Connection cn = DriverManager.getConnection(url, user, pwd)) {
			String sql = "select * from libros where idTema=?";
			PreparedStatement ps = cn.prepareStatement(sql);
			ps.setInt(1, idTema);
			
			ResultSet rs = ps.executeQuery();
			// next devuelve true si hay al menos uno.
			while (rs.next()){
				l = new Libro();
				l.setIsbn(rs.getInt("isbn"));
				l.setTitulo(rs.getString("titulo");
				l.setAutor(rs.getString("autor");
				l.setPrecio(precio);
				l.setPaginas(paginas)
				
			}
			
		} catch (SQLException ex) {
			ex.printStackTrace();
		}		
		return libros;
	}
	
	
}
