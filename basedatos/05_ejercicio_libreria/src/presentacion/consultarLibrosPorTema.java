/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.Arrays;
import javabeans.libro;
import javabeans.tema;
import javax.swing.DefaultComboBoxModel;
import modelo.gestionLibreria;

/**
 *
 * @author Administrador
 */
public class consultarLibrosPorTema extends javax.swing.JDialog {

    /**
     * Creates new form consultarLibrosPorTema
     */
    public consultarLibrosPorTema() {
        super(new Frame(), true);
        this.setBounds(100, 100, 300, 200);

        initComponents();

        gestionLibreria gestor = new gestionLibreria();
        //recuperamos los contactos y los convertimos a
        //un array de objetos contacto

        ArrayList<tema> ltemas = (ArrayList<tema>) gestor.verTemas();
        tema temaTodos = new tema();
        temaTodos.setIdTema(0);
        temaTodos.setTema("Todos los Temas");
        
        ltemas.add(temaTodos);
        
        DefaultComboBoxModel model = (DefaultComboBoxModel) temasCb.getModel();

        model.addElement(null);

        
        for (tema t:ltemas){
            model.addElement(t);//el mismo llama al toString que hemos sobreescrito y carga los datos.
            //también se podría haber usado addItem del combobox
        }

        
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        temasCb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        librosL = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        salirJb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(300, 300));

        jLabel1.setText("Temas Disponibles:");

        temasCb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                temasCbItemStateChanged(evt);
            }
        });

        jScrollPane1.setViewportView(librosL);

        jLabel2.setText("Listado de Libros por tema");

        salirJb.setText("salir");
        salirJb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirJbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(salirJb)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(temasCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(temasCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salirJb)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirJbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirJbActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        //this.dispose();
    }//GEN-LAST:event_salirJbActionPerformed

    private void temasCbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_temasCbItemStateChanged
        // TODO add your handling code here:

        gestionLibreria gestor = new gestionLibreria();
        
        tema aux = (tema) temasCb.getSelectedItem();
        int idtema = 0;
        
        if(aux!= null){
            idtema = aux.getIdTema();
        }else{
            
        }
        
        
        ArrayList<libro> llibros =null;
        
        if (aux != null) {
            
            //idtema = Integer.parseInt(aux.charAt(0) + "");

            llibros = (ArrayList<libro>) gestor.recuperarLibrosPorTema(idtema);

            String[] libros = new String[llibros.size()];
            int i = 0;

            for (libro l : llibros) {
                libros[i] = l.getTitulo();
                i++;
            }
            librosL.setListData(libros);
        }
        else{
            String [] vacio= new String[0];
            librosL.setListData(vacio);
        }

    }//GEN-LAST:event_temasCbItemStateChanged

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> librosL;
    private javax.swing.JButton salirJb;
    private javax.swing.JComboBox<tema> temasCb;
    // End of variables declaration//GEN-END:variables
}
